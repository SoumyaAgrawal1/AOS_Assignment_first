# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import battlefield_pb2 as battlefield__pb2


class BattlefieldServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitializeBattlefield = channel.unary_unary(
                '/BattlefieldService/InitializeBattlefield',
                request_serializer=battlefield__pb2.InitializeRequest.SerializeToString,
                response_deserializer=battlefield__pb2.InitializeResponse.FromString,
                )
        self.AddSoldier = channel.unary_unary(
                '/BattlefieldService/AddSoldier',
                request_serializer=battlefield__pb2.AddSoldierRequest.SerializeToString,
                response_deserializer=battlefield__pb2.AddSoldierResponse.FromString,
                )
        self.GetInitialLayout = channel.unary_unary(
                '/BattlefieldService/GetInitialLayout',
                request_serializer=battlefield__pb2.GetInitialLayoutRequest.SerializeToString,
                response_deserializer=battlefield__pb2.GetInitialLayoutResponse.FromString,
                )
        self.LaunchMissile = channel.unary_unary(
                '/BattlefieldService/LaunchMissile',
                request_serializer=battlefield__pb2.BattlefieldMissileRequest.SerializeToString,
                response_deserializer=battlefield__pb2.MissileResponse.FromString,
                )
        self.StatusAll = channel.unary_unary(
                '/BattlefieldService/StatusAll',
                request_serializer=battlefield__pb2.Empty.SerializeToString,
                response_deserializer=battlefield__pb2.StatusAllResponse.FromString,
                )
        self.FindCommander = channel.unary_unary(
                '/BattlefieldService/FindCommander',
                request_serializer=battlefield__pb2.Empty.SerializeToString,
                response_deserializer=battlefield__pb2.CommanderId.FromString,
                )
        self.MakeCommander = channel.unary_unary(
                '/BattlefieldService/MakeCommander',
                request_serializer=battlefield__pb2.Empty.SerializeToString,
                response_deserializer=battlefield__pb2.CommanderId.FromString,
                )
        self.MissileApproaching = channel.unary_unary(
                '/BattlefieldService/MissileApproaching',
                request_serializer=battlefield__pb2.BroadcastRequest.SerializeToString,
                response_deserializer=battlefield__pb2.BroadcastResponse.FromString,
                )
        self.WasHit = channel.unary_unary(
                '/BattlefieldService/WasHit',
                request_serializer=battlefield__pb2.WasHitRequest.SerializeToString,
                response_deserializer=battlefield__pb2.WasHitResponse.FromString,
                )


class BattlefieldServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def InitializeBattlefield(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddSoldier(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInitialLayout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LaunchMissile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StatusAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindCommander(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MakeCommander(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MissileApproaching(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WasHit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BattlefieldServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitializeBattlefield': grpc.unary_unary_rpc_method_handler(
                    servicer.InitializeBattlefield,
                    request_deserializer=battlefield__pb2.InitializeRequest.FromString,
                    response_serializer=battlefield__pb2.InitializeResponse.SerializeToString,
            ),
            'AddSoldier': grpc.unary_unary_rpc_method_handler(
                    servicer.AddSoldier,
                    request_deserializer=battlefield__pb2.AddSoldierRequest.FromString,
                    response_serializer=battlefield__pb2.AddSoldierResponse.SerializeToString,
            ),
            'GetInitialLayout': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInitialLayout,
                    request_deserializer=battlefield__pb2.GetInitialLayoutRequest.FromString,
                    response_serializer=battlefield__pb2.GetInitialLayoutResponse.SerializeToString,
            ),
            'LaunchMissile': grpc.unary_unary_rpc_method_handler(
                    servicer.LaunchMissile,
                    request_deserializer=battlefield__pb2.BattlefieldMissileRequest.FromString,
                    response_serializer=battlefield__pb2.MissileResponse.SerializeToString,
            ),
            'StatusAll': grpc.unary_unary_rpc_method_handler(
                    servicer.StatusAll,
                    request_deserializer=battlefield__pb2.Empty.FromString,
                    response_serializer=battlefield__pb2.StatusAllResponse.SerializeToString,
            ),
            'FindCommander': grpc.unary_unary_rpc_method_handler(
                    servicer.FindCommander,
                    request_deserializer=battlefield__pb2.Empty.FromString,
                    response_serializer=battlefield__pb2.CommanderId.SerializeToString,
            ),
            'MakeCommander': grpc.unary_unary_rpc_method_handler(
                    servicer.MakeCommander,
                    request_deserializer=battlefield__pb2.Empty.FromString,
                    response_serializer=battlefield__pb2.CommanderId.SerializeToString,
            ),
            'MissileApproaching': grpc.unary_unary_rpc_method_handler(
                    servicer.MissileApproaching,
                    request_deserializer=battlefield__pb2.BroadcastRequest.FromString,
                    response_serializer=battlefield__pb2.BroadcastResponse.SerializeToString,
            ),
            'WasHit': grpc.unary_unary_rpc_method_handler(
                    servicer.WasHit,
                    request_deserializer=battlefield__pb2.WasHitRequest.FromString,
                    response_serializer=battlefield__pb2.WasHitResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'BattlefieldService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BattlefieldService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def InitializeBattlefield(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BattlefieldService/InitializeBattlefield',
            battlefield__pb2.InitializeRequest.SerializeToString,
            battlefield__pb2.InitializeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddSoldier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BattlefieldService/AddSoldier',
            battlefield__pb2.AddSoldierRequest.SerializeToString,
            battlefield__pb2.AddSoldierResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInitialLayout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BattlefieldService/GetInitialLayout',
            battlefield__pb2.GetInitialLayoutRequest.SerializeToString,
            battlefield__pb2.GetInitialLayoutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LaunchMissile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BattlefieldService/LaunchMissile',
            battlefield__pb2.BattlefieldMissileRequest.SerializeToString,
            battlefield__pb2.MissileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StatusAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BattlefieldService/StatusAll',
            battlefield__pb2.Empty.SerializeToString,
            battlefield__pb2.StatusAllResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindCommander(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BattlefieldService/FindCommander',
            battlefield__pb2.Empty.SerializeToString,
            battlefield__pb2.CommanderId.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MakeCommander(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BattlefieldService/MakeCommander',
            battlefield__pb2.Empty.SerializeToString,
            battlefield__pb2.CommanderId.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MissileApproaching(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BattlefieldService/MissileApproaching',
            battlefield__pb2.BroadcastRequest.SerializeToString,
            battlefield__pb2.BroadcastResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WasHit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BattlefieldService/WasHit',
            battlefield__pb2.WasHitRequest.SerializeToString,
            battlefield__pb2.WasHitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
